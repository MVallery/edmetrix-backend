"""Try 2 model update

Revision ID: 3f85a4a59ebf
Revises: 
Create Date: 2025-03-19 08:55:43.072771

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '3f85a4a59ebf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('concept',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_concept_id', sa.Integer(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['parent_concept_id'], ['concept.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_concept_id'), 'concept', ['id'], unique=False)
    op.create_table('mistake',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mistake', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mistake_id'), 'mistake', ['id'], unique=False)
    op.create_table('school',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('img', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_school_id'), 'school', ['id'], unique=False)
    op.create_table('standard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('grade', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('subject', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_standard_id'), 'standard', ['id'], unique=False)
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('birthday', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('img', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('grade_level', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_id'), 'student', ['id'], unique=False)
    op.create_table('concept_standard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('concept_id', sa.Integer(), nullable=False),
    sa.Column('standard_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['concept_id'], ['concept.id'], ),
    sa.ForeignKeyConstraint(['standard_id'], ['standard.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_concept_standard_id'), 'concept_standard', ['id'], unique=False)
    op.create_table('layout',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', 'archived', name='chartstatus'), nullable=False),
    sa.Column('rows', sa.Integer(), nullable=False),
    sa.Column('cols', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_layout_id'), 'layout', ['id'], unique=False)
    op.create_table('seating_chart_student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_seating_chart_student_id'), 'seating_chart_student', ['id'], unique=False)
    op.create_table('student_note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_note_id'), 'student_note', ['id'], unique=False)
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('team_admin_id', sa.Integer(), nullable=False),
    sa.Column('img', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['school.id'], ),
    sa.ForeignKeyConstraint(['team_admin_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_id'), 'team', ['id'], unique=False)
    op.create_table('class_note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('created', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('updated', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_class_note_id'), 'class_note', ['id'], unique=False)
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_id'), 'group', ['id'], unique=False)
    op.create_table('layout_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('layout_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.ForeignKeyConstraint(['layout_id'], ['layout.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_layout_group_id'), 'layout_group', ['id'], unique=False)
    op.create_table('seating_chart',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('layout_id', sa.Integer(), nullable=False),
    sa.Column('autogenerated_status', sa.Enum('none', 'partial', 'full', name='autogenstatus'), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'archived', name='chartstatus'), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['layout_id'], ['layout.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_seating_chart_id'), 'seating_chart', ['id'], unique=False)
    op.create_table('student_class',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_premade', sa.Boolean(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_unit_id'), 'unit', ['id'], unique=False)
    op.create_table('user_team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_team_id'), 'user_team', ['id'], unique=False)
    op.create_table('assign',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('date', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('date_created', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assign_id'), 'assign', ['id'], unique=False)
    op.create_table('group_concept',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('concept_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['concept_id'], ['concept.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_concept_id'), 'group_concept', ['id'], unique=False)
    op.create_table('group_meeting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('created', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('time', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=True),
    sa.Column('minutes', sqlmodel.sql.sqltypes.AutoString(length=2), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_meeting_id'), 'group_meeting', ['id'], unique=False)
    op.create_table('group_metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('concept_id', sa.Integer(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('date', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['concept_id'], ['concept.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_metric_id'), 'group_metric', ['id'], unique=False)
    op.create_table('group_note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('created', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('updated', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_note_id'), 'group_note', ['id'], unique=False)
    op.create_table('group_student_note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('created', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('updated', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_student_note_id'), 'group_student_note', ['id'], unique=False)
    op.create_table('layout_seat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('layout_id', sa.Integer(), nullable=False),
    sa.Column('col', sa.Integer(), nullable=False),
    sa.Column('row', sa.Integer(), nullable=False),
    sa.Column('layout_group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['layout_group_id'], ['layout_group.id'], ),
    sa.ForeignKeyConstraint(['layout_id'], ['layout.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_layout_seat_id'), 'layout_seat', ['id'], unique=False)
    op.create_table('metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('concept_id', sa.Integer(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('date', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['concept_id'], ['concept.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_metric_id'), 'metric', ['id'], unique=False)
    op.create_table('unit_concept',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('concept_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['concept_id'], ['concept.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_unit_concept_id'), 'unit_concept', ['id'], unique=False)
    op.create_table('unit_standard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('standard_id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['standard_id'], ['standard.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_unit_standard_id'), 'unit_standard', ['id'], unique=False)
    op.create_table('assign_concept',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('concept_id', sa.Integer(), nullable=False),
    sa.Column('assign_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assign_id'], ['assign.id'], ),
    sa.ForeignKeyConstraint(['concept_id'], ['concept.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assign_concept_id'), 'assign_concept', ['id'], unique=False)
    op.create_table('assign_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assign_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('retest_score', sa.Integer(), nullable=True),
    sa.Column('retest_status', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.ForeignKeyConstraint(['assign_id'], ['assign.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assign_result_id'), 'assign_result', ['id'], unique=False)
    op.create_table('group_meeting_concept',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_meeting_id', sa.Integer(), nullable=False),
    sa.Column('concept_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['concept_id'], ['concept.id'], ),
    sa.ForeignKeyConstraint(['group_meeting_id'], ['group_meeting.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_meeting_concept_id'), 'group_meeting_concept', ['id'], unique=False)
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('answer', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_multiple_choice', sa.Boolean(), nullable=False),
    sa.Column('assign_id', sa.Integer(), nullable=False),
    sa.Column('concept_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assign_id'], ['assign.id'], ),
    sa.ForeignKeyConstraint(['concept_id'], ['concept.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_id'), 'question', ['id'], unique=False)
    op.create_table('spiralconcept',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('concept_id', sa.Integer(), nullable=True),
    sa.Column('assign_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assign_id'], ['assign.id'], ),
    sa.ForeignKeyConstraint(['concept_id'], ['concept.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_spiralconcept_id'), 'spiralconcept', ['id'], unique=False)
    op.create_table('student_metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('metric_id', sa.Integer(), nullable=False),
    sa.Column('mistake_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['metric_id'], ['metric.id'], ),
    sa.ForeignKeyConstraint(['mistake_id'], ['mistake.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_metric_id'), 'student_metric', ['id'], unique=False)
    op.create_table('question_response',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('mistake_id', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.ForeignKeyConstraint(['mistake_id'], ['mistake.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_response_id'), 'question_response', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_question_response_id'), table_name='question_response')
    op.drop_table('question_response')
    op.drop_index(op.f('ix_student_metric_id'), table_name='student_metric')
    op.drop_table('student_metric')
    op.drop_index(op.f('ix_spiralconcept_id'), table_name='spiralconcept')
    op.drop_table('spiralconcept')
    op.drop_index(op.f('ix_question_id'), table_name='question')
    op.drop_table('question')
    op.drop_index(op.f('ix_group_meeting_concept_id'), table_name='group_meeting_concept')
    op.drop_table('group_meeting_concept')
    op.drop_index(op.f('ix_assign_result_id'), table_name='assign_result')
    op.drop_table('assign_result')
    op.drop_index(op.f('ix_assign_concept_id'), table_name='assign_concept')
    op.drop_table('assign_concept')
    op.drop_index(op.f('ix_unit_standard_id'), table_name='unit_standard')
    op.drop_table('unit_standard')
    op.drop_index(op.f('ix_unit_concept_id'), table_name='unit_concept')
    op.drop_table('unit_concept')
    op.drop_index(op.f('ix_metric_id'), table_name='metric')
    op.drop_table('metric')
    op.drop_index(op.f('ix_layout_seat_id'), table_name='layout_seat')
    op.drop_table('layout_seat')
    op.drop_index(op.f('ix_group_student_note_id'), table_name='group_student_note')
    op.drop_table('group_student_note')
    op.drop_index(op.f('ix_group_note_id'), table_name='group_note')
    op.drop_table('group_note')
    op.drop_index(op.f('ix_group_metric_id'), table_name='group_metric')
    op.drop_table('group_metric')
    op.drop_index(op.f('ix_group_meeting_id'), table_name='group_meeting')
    op.drop_table('group_meeting')
    op.drop_index(op.f('ix_group_concept_id'), table_name='group_concept')
    op.drop_table('group_concept')
    op.drop_index(op.f('ix_assign_id'), table_name='assign')
    op.drop_table('assign')
    op.drop_index(op.f('ix_user_team_id'), table_name='user_team')
    op.drop_table('user_team')
    op.drop_index(op.f('ix_unit_id'), table_name='unit')
    op.drop_table('unit')
    op.drop_table('student_class')
    op.drop_index(op.f('ix_seating_chart_id'), table_name='seating_chart')
    op.drop_table('seating_chart')
    op.drop_index(op.f('ix_layout_group_id'), table_name='layout_group')
    op.drop_table('layout_group')
    op.drop_index(op.f('ix_group_id'), table_name='group')
    op.drop_table('group')
    op.drop_index(op.f('ix_class_note_id'), table_name='class_note')
    op.drop_table('class_note')
    op.drop_index(op.f('ix_team_id'), table_name='team')
    op.drop_table('team')
    op.drop_index(op.f('ix_student_note_id'), table_name='student_note')
    op.drop_table('student_note')
    op.drop_index(op.f('ix_seating_chart_student_id'), table_name='seating_chart_student')
    op.drop_table('seating_chart_student')
    op.drop_index(op.f('ix_layout_id'), table_name='layout')
    op.drop_table('layout')
    op.drop_index(op.f('ix_concept_standard_id'), table_name='concept_standard')
    op.drop_table('concept_standard')
    op.drop_index(op.f('ix_student_id'), table_name='student')
    op.drop_table('student')
    op.drop_index(op.f('ix_standard_id'), table_name='standard')
    op.drop_table('standard')
    op.drop_index(op.f('ix_school_id'), table_name='school')
    op.drop_table('school')
    op.drop_index(op.f('ix_mistake_id'), table_name='mistake')
    op.drop_table('mistake')
    op.drop_index(op.f('ix_concept_id'), table_name='concept')
    op.drop_table('concept')
    # ### end Alembic commands ###
