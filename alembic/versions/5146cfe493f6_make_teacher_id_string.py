"""Make teacher id String

Revision ID: 5146cfe493f6
Revises: 45bd242763f8
Create Date: 2025-07-16 19:47:00.334519

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '5146cfe493f6'
down_revision: Union[str, None] = '45bd242763f8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
  
    # op.alter_column('class', 'color',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=10),
    #            existing_nullable=True)
    # op.alter_column('class', 'grade_level',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=2),
    #            existing_nullable=True)
    # op.alter_column('class', 'school_year',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=9),
    #            existing_nullable=True)
    # op.alter_column('class_subject', 'color',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=10),
    #            existing_nullable=True)
    # op.alter_column('group_meeting', 'time',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=5),
    #            existing_nullable=True)
    # op.alter_column('group_meeting', 'minutes',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=2),
    #            existing_nullable=True)
    # op.alter_column('prep', 'color',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=10),
    #            existing_nullable=True)
    # op.alter_column('school', 'color',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=10),
    #            existing_nullable=True)
    # op.alter_column('standard', 'grade_level',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=50),
    #            existing_nullable=True)
    # op.alter_column('student_class', 'color',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=10),
    #            existing_nullable=True)
    # op.alter_column('student_note', 'color',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=10),
    #            existing_nullable=True)
    # op.alter_column('team', 'color',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=10),
    #            existing_nullable=True)
    # op.alter_column('unit', 'color',
    #            existing_type=mysql.TINYTEXT(),
    #            type_=sa.Text(length=10),
    #            existing_nullable=True)
        # Drop FK constraints referencing teacher.id
    # op.drop_constraint('layout_ibfk_1', 'layout', type_='foreignkey')
    # op.drop_constraint('layout_ibfk_2', 'layout', type_='foreignkey')

    # op.drop_constraint('prep_ibfk_2', 'prep', type_='foreignkey')
    # op.drop_constraint('subject_ibfk_1', 'subject', type_='foreignkey')
    # op.drop_constraint('unit_ibfk_3', 'unit', type_='foreignkey')
    # op.drop_constraint('assign_ibfk_4', 'assign', type_='foreignkey')
    # op.drop_constraint('assign_ibfk_5', 'assign', type_='foreignkey')
    # op.drop_constraint('assign_ibfk_6', 'assign', type_='foreignkey')
    # op.drop_constraint('assign_ibfk_7', 'assign', type_='foreignkey')
    # op.drop_constraint('class_ibfk_1', 'class', type_='foreignkey')
    # op.drop_constraint('class_ibfk_2', 'class', type_='foreignkey')

    # Alter columns to String(36)
    # op.alter_column('teacher', 'id', existing_type=mysql.INTEGER(), type_=sa.String(36), existing_nullable=False)
    # op.alter_column('assign', 'teacher_id', existing_type=mysql.INTEGER(), type_=sa.String(36), existing_nullable=True)
    # op.alter_column('layout', 'teacher_id', existing_type=mysql.INTEGER(), type_=sa.String(36), existing_nullable=True)
    # op.alter_column('metric', 'teacher_id', existing_type=mysql.INTEGER(), type_=sa.String(36), existing_nullable=True)
    # op.alter_column('prep', 'teacher_id', existing_type=mysql.INTEGER(), type_=sa.String(36), existing_nullable=True)
    # op.alter_column('subject', 'teacher_id', existing_type=mysql.INTEGER(), type_=sa.String(36), existing_nullable=True)
    # op.alter_column('unit', 'teacher_id', existing_type=mysql.INTEGER(), type_=sa.String(36), existing_nullable=True)

    # Re-create FK constraints
    # op.create_foreign_key('assign_ibfk_1', 'assign', 'teacher', ['teacher_id'], ['id'])
    # op.create_foreign_key('layout_ibfk_1', 'layout', 'teacher', ['teacher_id'], ['id'])
    # op.create_foreign_key('metric_ibfk_1', 'metric', 'teacher', ['teacher_id'], ['id'])
    # op.create_foreign_key('prep_ibfk_1', 'prep', 'teacher', ['teacher_id'], ['id'])
    op.create_foreign_key('subject_ibfk_1', 'subject', 'teacher', ['teacher_id'], ['id'])
    op.create_foreign_key('unit_ibfk_1', 'unit', 'teacher', ['teacher_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    op.alter_column('unit', 'color',
               existing_type=sa.Text(length=10),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)

    op.alter_column('team', 'color',
               existing_type=sa.Text(length=10),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)

    op.alter_column('student_note', 'color',
               existing_type=sa.Text(length=10),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)
    op.alter_column('student_class', 'color',
               existing_type=sa.Text(length=10),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)
    op.alter_column('standard', 'grade_level',
               existing_type=sa.Text(length=50),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)
    op.alter_column('school', 'color',
               existing_type=sa.Text(length=10),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)

    op.alter_column('prep', 'color',
               existing_type=sa.Text(length=10),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)

    op.alter_column('group_meeting', 'minutes',
               existing_type=sa.Text(length=2),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)
    op.alter_column('group_meeting', 'time',
               existing_type=sa.Text(length=5),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)
    op.alter_column('class_subject', 'color',
               existing_type=sa.Text(length=10),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)
    op.alter_column('class', 'school_year',
               existing_type=sa.Text(length=9),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)
    op.alter_column('class', 'grade_level',
               existing_type=sa.Text(length=2),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)
    op.alter_column('class', 'color',
               existing_type=sa.Text(length=10),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)

    
    # # Drop FK constraints
    # op.drop_constraint('assign_ibfk_1', 'assign', type_='foreignkey')
    # op.drop_constraint('layout_ibfk_1', 'layout', type_='foreignkey')
    # op.drop_constraint('metric_ibfk_1', 'metric', type_='foreignkey')
    # op.drop_constraint('prep_ibfk_1', 'prep', type_='foreignkey')
    # op.drop_constraint('subject_ibfk_1', 'subject', type_='foreignkey')
    # op.drop_constraint('unit_ibfk_1', 'unit', type_='foreignkey')

    # # Revert columns to INTEGER
    # op.alter_column('teacher', 'id', existing_type=sa.String(36), type_=mysql.INTEGER(), existing_nullable=False)
    # op.alter_column('assign', 'teacher_id', existing_type=sa.String(36), type_=mysql.INTEGER(), existing_nullable=True)
    # op.alter_column('layout', 'teacher_id', existing_type=sa.String(36), type_=mysql.INTEGER(), existing_nullable=True)
    # op.alter_column('metric', 'teacher_id', existing_type=sa.String(36), type_=mysql.INTEGER(), existing_nullable=True)
    # op.alter_column('prep', 'teacher_id', existing_type=sa.String(36), type_=mysql.INTEGER(), existing_nullable=True)
    # op.alter_column('subject', 'teacher_id', existing_type=sa.String(36), type_=mysql.INTEGER(), existing_nullable=True)
    # op.alter_column('unit', 'teacher_id', existing_type=sa.String(36), type_=mysql.INTEGER(), existing_nullable=True)

    # Recreate FK constraints
    op.create_foreign_key('assign_ibfk_1', 'assign', 'teacher', ['teacher_id'], ['id'])
    op.create_foreign_key('layout_ibfk_1', 'layout', 'teacher', ['teacher_id'], ['id'])
    op.create_foreign_key('metric_ibfk_1', 'metric', 'teacher', ['teacher_id'], ['id'])
    op.create_foreign_key('prep_ibfk_1', 'prep', 'teacher', ['teacher_id'], ['id'])
    op.create_foreign_key('subject_ibfk_1', 'subject', 'teacher', ['teacher_id'], ['id'])
    op.create_foreign_key('unit_ibfk_1', 'unit', 'teacher', ['teacher_id'], ['id'])
    # ### end Alembic commands ###
